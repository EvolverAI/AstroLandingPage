---
// Language Switcher Component
import { getCollection } from "astro:content";
import { getAvailableLanguages } from "../utils/content.js";

export interface Props {
    currentLanguage?: string;
    className?: string;
}

const { currentLanguage = "en", className = "" } = Astro.props;

// Get available languages from content collections
let languages: any[] = [];
try {
    const languagesCollection = await getCollection("languages");
    languages = getAvailableLanguages(languagesCollection);
} catch (error) {
    console.warn("Could not load languages:", error);
    languages = [{ code: "en", name: "English", flag: "🇺🇸" }];
}
---

<div class={`language-switcher ${className}`}>
    <div class="relative inline-block text-left">
        <div>
            <button
                type="button"
                class="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                id="language-menu-button"
                aria-expanded="true"
                aria-haspopup="true"
            >
                {
                    languages.find((lang) => lang.code === currentLanguage)
                        ?.flag || "🌐"
                }
                {
                    languages.find((lang) => lang.code === currentLanguage)
                        ?.name || "Language"
                }
                <svg
                    class="-mr-1 ml-2 h-5 w-5"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                >
                    <path
                        fill-rule="evenodd"
                        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                        clip-rule="evenodd"></path>
                </svg>
            </button>
        </div>

        <div
            class="language-dropdown origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none hidden"
            role="menu"
            aria-orientation="vertical"
            aria-labelledby="language-menu-button"
            tabindex="-1"
        >
            <div class="py-1" role="none">
                {
                    languages.map((language) => {
                        const href =
                            language.code === "en" ? "/" : `/${language.code}`;
                        return (
                            <a
                                href={href}
                                class={`flex items-center px-4 py-2 text-sm hover:bg-gray-100 hover:text-gray-900 ${
                                    currentLanguage === language.code
                                        ? "bg-blue-50 text-blue-700"
                                        : "text-gray-700"
                                }`}
                                role="menuitem"
                                tabindex="-1"
                            >
                                <span class="mr-3 text-lg">
                                    {language.flag}
                                </span>
                                {language.name}
                                {currentLanguage === language.code && (
                                    <svg
                                        class="ml-auto h-5 w-5 text-blue-600"
                                        xmlns="http://www.w3.org/2000/svg"
                                        viewBox="0 0 20 20"
                                        fill="currentColor"
                                    >
                                        <path
                                            fill-rule="evenodd"
                                            d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                            clip-rule="evenodd"
                                        />
                                    </svg>
                                )}
                            </a>
                        );
                    })
                }
            </div>
        </div>
    </div>
</div>

<script>
    // Toggle dropdown functionality
    document.addEventListener("DOMContentLoaded", function () {
        const button = document.getElementById("language-menu-button");
        const dropdown = document.querySelector(".language-dropdown");

        if (button && dropdown) {
            button.addEventListener("click", function () {
                dropdown.classList.toggle("hidden");
            });

            // Close dropdown when clicking outside
            document.addEventListener("click", function (event) {
                const target = event.target as Element;
                if (!button.contains(target) && !dropdown.contains(target)) {
                    dropdown.classList.add("hidden");
                }
            });
        }
    });
</script>

<style>
    .language-switcher {
        z-index: 50;
    }
</style>
