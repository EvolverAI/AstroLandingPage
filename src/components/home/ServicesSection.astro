---
// Services Section using the reusable CardsSection component with Content Collections
import CardsSection from "../global/CardsSection.astro";
import { getEntry } from "astro:content";

export interface Props {
  language?: string;
  environment?: string;
}

const { language = "en", environment = "production" } = Astro.props;

// Get content from Content Collections with fallback
let servicesData: any = null;
let localizedSections: any = {};

try {
  const servicesSection = await getEntry("sections", "services");
  servicesData = servicesSection?.data;

  // Get localized content
  const langData = await getEntry("languages", language);
  localizedSections = langData?.data?.sections || {};
} catch (error) {
  console.warn("Content Collections not available:", error);
}

// Get localized services content
const servicesContent = localizedSections.services || {};

// Default services if not in content
const defaultServices = [
  {
    title: "Customized AI Solutions",
    description: "Tailored systems that meet your unique business needs.",
    icon: "check_circle",
  },
  {
    title: "Data-Driven Insights",
    description:
      "Advanced analytics to transform your data into actionable strategies.",
    icon: "insights",
  },
  {
    title: "Intelligent Automation",
    description:
      "Streamlined, scalable workflows that grow with your business and reduce operational costs.",
    icon: "speed",
  },
  {
    title: "B2B Outsourcing",
    description:
      "Comprehensive services that let you focus on core competencies while we handle specialized processes.",
    icon: "business",
    linkText: "Discover More",
    linkUrl: "#b2b_outsourcing",
  },
];

// Use localized cards or fallback to default
const servicesCards =
  servicesContent.cards || servicesData?.content?.items || defaultServices;

// Convert legacy 'link' property to 'linkUrl' for compatibility
const processedServices = servicesCards.map((service: any) => ({
  ...service,
  linkUrl: service.linkUrl || service.link,
  linkText: service.linkText || (service.link ? "Discover More" : undefined),
}));

const sectionProps = {
  sectionId: "services",
  sectionType: "services",
  title: servicesContent.title || servicesData?.content?.title || "What we do",
  description:
    servicesContent.description ||
    servicesData?.content?.description ||
    "Our comprehensive AI services",
  cards: processedServices,
  columns: "4",
  responsiveColumns: {
    mobile: "1",
    tablet: "2",
    desktop: "4",
  },
  theme: "dark",
  cardTheme: "dark",
  language,
  environment,
  customClasses: servicesData?.styling?.customClasses || "",
};
---

<CardsSection {...sectionProps} />
